/***********************************************************
服务器与客户端通信消息格式:

前10个字节包含消息头+ 消息大小

客户端与服务器接发消息按统一格式解压包: 一个完整msg 必须经过pack->netpack 才能作为正确格式发送，相反接受即逆运算

如: 一个经过协议序列化的msg 字符串大小为size必须经过pack->netpack

(v,p为消息命令头v现暂时保留,默认值为1，p 为如1002类似值区分消息类型)	
pack:
	buffer = (uint8_t *)malloc(size+6);
	buffer[0] = (v >> 8) & 0xff;
	buffer[1] = v & 0xff;
	buffer[2] = (p >> 24) & 0xff;
	buffer[3] = (p >> 16) & 0xff;
	buffer[4] = (p >> 8) & 0xff;
	buffer[5] = p & 0xff;
	memcpy(buffer+6, msg, size);

netpack:
	uint8_t *ch = (uint8_t *)malloc(size + 2);
	ch[0] = (size>>8) & 0xff;
	ch[1] = size & 0xff;
	memcpy(ch + 2, msg, size);


unpack
	v = buffer[0] << 8 | buffer[1];
	p = (buffer[2] << 24) | (buffer[3] << 16) | (buffer[4] << 8) | buffer[5];


***************************************************************/



package PROTOCOL;

//***********************************************roleinfo****************************************************************************//
//建筑信息
message build_info
{
	required int32 id = 1;						//建筑ID				
	required int32 level = 2;					//建筑等级
	required int32 index = 3;					//建筑索引
	required int32 x = 4;						//建筑坐标
	required int32 y = 5;
	required int32 finish = 6;					//建筑、造兵完成标志0未完成 1完成
	optional int32 remain_time = 7;				//finish=0时建造或升级剩余时间
	optional int32 time_c_type = 8;				//finish=0时判断处于什么状态0建造 1升级 
	optional int32 collect_time = 9;		
	optional int32 build_time = 10;				//可选 建造时间
}

//军队
message army 
{
	required int32 id = 1;						//兵种id
	required int32 count = 2;					//完成兵数量
	required int32 counting = 3;					//正在造兵数量
	required int32 create_time = 4;				//开始造兵时间 
	required int32 remain_time = 5;				//finish=0 时剩余时间
}

message army_info 
{
	required int32 index = 1;					//建筑索引
	required int32 id = 2;						//建筑id
	required int32 sum_count = 3;				// (可选)总兵占用单位= 单兵种单位* 单兵种数量 + ...
	required int32 finish = 4;					//0未完成 1完成
	repeated army armys = 5;
}

message army_lv 
{
	required int32 id = 1;
	required int32 level = 2;
}

//角色信息
message role_info 
{
	required string name = 1; 					//角色/村庄名字	
	required int32 level = 2;					//等级
	required int32 exp = 3;  					//经验
	required int32 points = 4; 					//积分
	required int32 gem = 5; 					//宝石
	required int32 goldcoin = 6;					//拥有的金币
	required int32 max_goldcoin = 7; 			//最大可拥有金币量
	required int32 water = 8;					//圣水
	required int32 max_water = 9;				//最大可拥有圣水量
	required int32 build_count = 10;				//建筑数目(即为建筑索引计数)
	repeated build_info builds = 11;				//建筑
	repeated army_info armys = 12;				//军队
	repeated army_lv armylvs = 13;			      	//各兵种等级
}

//创建角色/村庄
message create_role_req
{	
	required string name = 1;					//角色/村庄名字
	
}

message create_role_rsp
{
	required int32 result = 1;					// 0 成功 1 创建过
	required role_info roleinfo = 2;
}

//加载角色信息
message load_role_rsp
{
	required int32 result = 1;					//0 成功 1 新角色资料空
	optional role_info roleinfo = 2;
}


//***********************************************builodaction****************************************************************************//

//建筑操作
//id(建筑id), index(建筑索引), x/y(建筑横纵坐标) 
//result(返回结果-1请求错误 0 成功, 1 系统服务器错误, 2金币或圣水不足, 3建筑不存在, 4 建筑达到上限5 等级达到上限, 6 建筑正在建造中
//		7 造兵空间不足)
message buildaction_req 
{
	message upgrade_build 						//升级建筑
	{					
		required int32 id = 1;					
		required int32 index = 2;
	}
	message place_build 							//建造建筑
	{						
		required int32 id = 1;
		required int32 x = 2;
		required int32 y = 3;
	}
	message collect_resource 						//收集资源
	{					
		required int32 id = 1;
		required int32 index = 2;
	}
	message move_build 							//移动建筑
	{						
		required int32 id = 1;
		required int32 index = 2;
		required int32 x = 3;
		required int32 y = 4;
	}
	message produce_armys						//生产兵
	{
		required int32 id = 1;
		required int32 count = 2;
		required int32 build_id = 3;
		required int32 index = 4;
	}
	required  int32 type = 1;								//0 升级建筑1 建造建筑 2 收集建筑3 移动建筑4 造兵
	optional  upgrade_build upgrade = 2;
	optional  place_build place = 3;
	optional  collect_resource collect = 4;
	optional  move_build move = 5;
	optional  produce_armys produce = 6;
}

//建筑操作返回
message buildaction_rsp 
{
	required int32 result = 1;
	optional int32 index = 2;
	optional int32 value = 3;
}

/**********************************************fightaction******************************************************/

message fightaction
{
	
}